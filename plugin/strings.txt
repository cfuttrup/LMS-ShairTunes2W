# String file for ShairTunes plugin

PLUGIN_SHAIRTUNES2
	EN	ShairTunes2 (fork)
	
PLUGIN_SHAIRTUNES2_DESC
	EN	ShairTunes2 Integration (w/Windows)

PLUGIN_SHAIRTUNES2_WARNING
	EN	WARNING: Either LMS or the enabled/disabled players must be restarted for modifications to be taken into account

PLUGIN_SHAIRTUNES2W_BINARIES
	EN	Helper binary 
	
PLUGIN_SHAIRTUNES2W_NEEDRESTART
	EN	(restarting LMS recommended if changed)

PLUGIN_SHAIRTUNES2W_BINARIES_DESC
	EN	Choose what helper will be used. Leave it empty to let plugin choose automatically
	
PLUGIN_SHAIRTUNES2_LOGLEVEL
	EN	Enable logging 
	
PLUGIN_SHAIRTUNES2_LOGLEVEL_DESC
	EN	Set various log level

PLUGIN_SHAIRTUNES2_BUFFER
	EN	Buffer level (KB)
	
PLUGIN_SHAIRTUNES2_BUFFER_DESC
	EN	Set the amount of buffering LMS does before playing. 

PLUGIN_SHAIRTUNES2_LATENCY
	EN	RTP and HTTP buffering (ms)

PLUGIN_SHAIRTUNES2_RTPLATENCY
	EN	RTP latency
	
PLUGIN_SHAIRTUNES2_HTTPLATENCY
	EN	HTTP latency
	
PLUGIN_SHAIRTUNES2_LATENCY_DESC
	EN	Use to tweak buffering realtime bridge buffering. AirPlay frames are received using UDP (realtime RTP) and 
	EN	are forwarded to SB using HTTP. When two received UDP frames are not consecutives, the in-between missing 
	EN	ones are requested again but HTTP sending must be put on hold while waiting for these.
	EN	SB players must also have enough frames buffered to ensure uninterrupted playback. It seems that the "Buffer Level"
	EN	parameter above is not working well, so it's also possible to force the bridge to build a big enough buffer before
	EN	requesting LMS to play, so that SB players will receive a large amount of larger burst frames at startup
	EN	<br>- RTP: max holding time (ms) of HTTP sending when missing UDP frames
	EN	<br>- HTTP: delay before playback command is sent to LMS after first AirPlay frame has been received 

PLUGIN_SHAIRTUNES2_USESYNC
	EN	Wait for synchro 
	
PLUGIN_SHAIRTUNES2_USESYNC_DESC
	EN	AirPlay protocol specifies that a sync flag is sent on the first audio packet, but some controllers, 
	EN	including iOS 10.x and Tuneblade do not set it and this might prevent playback. This option allows 
	EN	playback to restart at first received packet, not waiting for a packet with the flag set, but pause
	EN	function on iOS 10.x will not work as expected, as iOS sends silence frames for a few seconds when 
	EN	paused.

PLUGIN_SHAIRTUNES2_USEFLAC
	EN	Use flac for streaming
	
PLUGIN_SHAIRTUNES2_USEFLAC_DESC
	EN	Audio received from AirPlay devices are codec with ALAC, which cannot be streamed directly to LMS players.
	EN	By default, audio is decoded and streamed in PCM, which can be a lot of network bandwidth for synchronized 
	EN	players. Use this option to re-encode audio in FLAC, dividing bandwidth by ~2
	
PLUGIN_SHAIRTUNES2_SYNCVOLUME
	EN	Change volume of sync'd players
	
PLUGIN_SHAIRTUNES2_SYNCVOLUME_DESC
	EN	When player used through ShairTunes2 is synchronized, changing its volume will proportionally change volume 
	EN	of other players in the sync group
	
PLUGIN_SHAIRTUNES2_SQUEEZELITE
	EN	Allow all Squeezelite-based Players
	
PLUGIN_SHAIRTUNES2_SQUEEZELITE_DESC
	EN	Allow Squeezelite version lower than 1.8 and AirPlay, ChromeCast and UPnP bridge "virtual" players to be used
	
